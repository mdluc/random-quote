{"version":3,"sources":["reportWebVitals.js","Components/QuoteGenerator.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","QuoteGenerator","useState","quote","setQuote","updateQuote","axios","get","response","data","$","document","ready","rand","Math","round","random","toString","css","useEffect","CircularProgress","twitterLink","concat","content","author","Container","maxWidth","id","Card","CardContent","Typography","variant","component","fontSize","Box","className","Button","href","target","onClick","vartiant","ReactDOM","render","StrictMode","getElementById"],"mappings":"oLAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,2KCgBC,SAASQ,IACtB,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAGMC,EAAc,WAClBC,IAAMC,IAHI,kCAGKZ,MAAK,SAACa,GACnBJ,EAASI,EAASC,UAkBtB,GAdAC,IAAEC,UAAUC,OAAM,WAChB,IAAIC,EAfM,KAHHC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,KAAKC,SAAS,KAChDH,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,KAAKC,SAAS,KAChDH,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,KAAKC,SAAS,IAiBvDP,IAAE,UAAUQ,IAAI,QAASL,GACzBH,IAAE,WAAWQ,IAAI,QAASL,GAC1BH,IAAE,eAAeQ,IAAI,QAASL,GAC9BH,IAAE,UAAUQ,IAAI,aAAcL,GAC9BH,IAAE,UAAUQ,IAAI,QAAS,SACzBR,IAAE,QAAQQ,IAAI,aAAcL,MAG9BM,qBAAU,WACRd,MACC,KAEEF,EAAO,OAAO,cAACiB,EAAA,EAAD,IAEnB,IAAMC,EACJ,yDAAyDC,OAAzD,UACKnB,EAAMoB,QADX,cACwBpB,EAAMqB,SAGhC,OACE,+BACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAAKC,GAAG,WAA5B,UACE,cAACC,EAAA,EAAD,CAAMD,GAAG,YAAT,SACE,eAACE,EAAA,EAAD,CAAaF,GAAG,cAAhB,UACE,eAACG,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKL,GAAG,QAA3C,UACE,cAAC,IAAD,CAAiBM,SAAS,UACzB9B,EAAMoB,WAET,eAACO,EAAA,EAAD,CAAYH,GAAG,SAAf,mBAAgCxB,EAAMqB,UACtC,eAACU,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,eAACC,EAAA,EAAD,CACEL,QAAQ,WACRM,KAAMhB,EACNiB,OAAO,SACPX,GAAG,aAJL,UAME,cAAC,IAAD,IANF,iBASA,eAACS,EAAA,EAAD,CAAQL,QAAQ,YAAYQ,QAASlC,EAAasB,GAAG,WAArD,UACE,cAAC,IAAD,IADF,uBAON,cAACS,EAAA,EAAD,CACEI,SAAS,WACTb,GAAG,SACHU,KAAK,2BACLC,OAAO,SAJT,yBC5ERG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1C,EAAD,MAEFU,SAASiC,eAAe,SAM1BpD,M","file":"static/js/main.229bbe23.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styling/Quote.css\";\r\nimport FormatQuoteIcon from \"@material-ui/icons/FormatQuote\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport $ from \"jquery\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nfunction randomColor() {\r\n  var r = (Math.round(Math.random() * 127) + 127).toString(16);\r\n  var g = (Math.round(Math.random() * 127) + 127).toString(16);\r\n  var b = (Math.round(Math.random() * 127) + 127).toString(16);\r\n  let color = \"#\" + r + g + b;\r\n  return color;\r\n}\r\n\r\nexport default function QuoteGenerator() {\r\n  const [quote, setQuote] = useState(null);\r\n  const url = \"https://api.quotable.io/random\";\r\n\r\n  const updateQuote = () => {\r\n    axios.get(url).then((response) => {\r\n      setQuote(response.data);\r\n    });\r\n  };\r\n\r\n  $(document).ready(function () {\r\n    var rand = randomColor();\r\n    $(\"#quote\").css(\"color\", rand);\r\n    $(\"#author\").css(\"color\", rand);\r\n    $(\"#twitterBtn\").css(\"color\", rand);\r\n    $(\"Button\").css(\"background\", rand);\r\n    $(\"Button\").css(\"color\", \"white\");\r\n    $(\"body\").css(\"background\", rand);\r\n  });\r\n\r\n  useEffect(() => {\r\n    updateQuote();\r\n  }, []);\r\n\r\n  if (!quote) return <CircularProgress />;\r\n\r\n  const twitterLink =\r\n    \"https://twitter.com/intent/tweet?hashtags=quotes&text=\".concat(\r\n      `${quote.content} - ${quote.author}`\r\n    );\r\n\r\n  return (\r\n    <main>\r\n      <Container maxWidth=\"md\" id=\"centered\">\r\n        <Card id=\"quote-box\">\r\n          <CardContent id=\"box-content\">\r\n            <Typography variant=\"h5\" component=\"h2\" id=\"quote\">\r\n              <FormatQuoteIcon fontSize=\"large\" />\r\n              {quote.content}\r\n            </Typography>\r\n            <Typography id=\"author\">&mdash;{quote.author}</Typography>\r\n            <Box className=\"buttons\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                href={twitterLink}\r\n                target=\"_blank\"\r\n                id=\"twitterBtn\"\r\n              >\r\n                <TwitterIcon />\r\n                tweet quote\r\n              </Button>\r\n              <Button variant=\"contained\" onClick={updateQuote} id=\"quoteBtn\">\r\n                <AutorenewIcon />\r\n                new quote\r\n              </Button>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n        <Button\r\n          vartiant=\"outlined\"\r\n          id=\"footer\"\r\n          href=\"https://github.com/mdluc\"\r\n          target=\"_blank\"\r\n        >\r\n          @mdluc\r\n        </Button>\r\n      </Container>\r\n    </main>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport QuoteGenerator from './Components/QuoteGenerator';\n\nReactDOM.render(\n  <React.StrictMode>\n    <QuoteGenerator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}